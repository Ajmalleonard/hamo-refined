{"version":3,"file":"use-is-touch-device.js","sources":["../../src/hooks/use-is-touch-device.js"],"sourcesContent":["import { useLayoutEffect, useState } from 'react'\r\n\r\nexport const useIsTouchDevice = () => {\r\n  const [isTouchDevice, setIsTouchDevice] = useState(undefined)\r\n\r\n  useLayoutEffect(() => {\r\n    const onResize = () => {\r\n      setIsTouchDevice(\r\n        'ontouchstart' in window ||\r\n          navigator.maxTouchPoints > 0 ||\r\n          navigator.msMaxTouchPoints > 0\r\n      )\r\n    }\r\n\r\n    onResize()\r\n    window.addEventListener('resize', onResize, false)\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', onResize, false)\r\n    }\r\n  }, [])\r\n\r\n  return isTouchDevice\r\n}\r\n"],"names":["useIsTouchDevice","isTouchDevice","setIsTouchDevice","useState","undefined","useLayoutEffect","onResize","window","navigator","maxTouchPoints","msMaxTouchPoints","addEventListener","removeEventListener"],"mappings":"kFAEY,MAACA,iBAAmB,KAC9B,KAAM,CAACC,EAAeC,GAAoBC,oBAASC,GAmBnD,OAjBAC,sBAAgB,KACd,MAAMC,EAAW,KACfJ,EACE,iBAAkBK,QACW,EAA3BC,UAAUC,gBACmB,EAA7BD,UAAUE,mBAOhB,OAHAJ,IACAC,OAAOI,iBAAiB,SAAUL,GAAU,GAErC,KACLC,OAAOK,oBAAoB,SAAUN,GAAU,KAEhD,IAEIL"}